1.php 命名空间和绝对路径一致
2.类名的首字母大写 (驼峰命名)
3.除了入口之外，只有一个类
4.变量命名 (匈牙利命名法)

接受参数要求：formdata必须是json 字符串


单一入口，自动加载

验证类：
       前提：不应该依赖待验证的数据，应该以验证角色为主
       功能：验证接受参数的同时，支持设置默认值，

路由类：实现逻辑和数据分离，复用逻辑部分；



应用类：
      作用：


避免使用 全局函数（public static）
最好放在工厂函数中统一创建，当时工厂类不应该这样用，当类过多的时候，并不友好；


->目前的各种类的注册使用的是 工厂模式 加上注册器模式。但是缺少一个 项目启动时候的自动注册的文件，将系统需要用到的类提前进行注册，然后直接从注册器中去获取。这样不仅避免重复的新建类，而且还能直接通过，注册器中的get 函数直接获取函数，同时应该让注册器支持共享（即单例模式）和非共享模式。

->实现方法，使用container类替换resgister类（这个类使用方便，但是太多静态方法。感觉不好，但是好用，随处直接去container::get($key)就可以使用了）；

里面的set 相当于依赖注入，get 相当于控制反转，解决了依赖过程中的参数传递


->最终目的，类的注册服务和使用服务分离。将所有的类进行包裹。一处注册，随处使用。（控制反转）

->实现方法：使用一个类或者配置文件，替换现在的factory类



使用一个Di类，进行接受外部注册的类，
同时使用一个application 类进行项目启动的格式化，各种类的初始化注册

//错误异常处理
throw new \Com\CoreException(\Com\CoreException::CODE_FAILED_CREATE_OBJ);

throw Factory::getCoreException('CODE_DB_CONNECT_ERROR');


//判断数据存在

$check_arr = array('host'=>'slave1','tb_name' => 't_contacts_list', 'cond_col' => array('name=' => $data_arr['name']));
$is_exist = $db->check_one_exist($check_arr);

controller :接口对应的分支

Model:控制器中调用，用来操作数据库

Com:公共库

Config:配置信息

//测试
http://192.168.0.88/laravel/dcenter/api/?type=index&dataform={"cur_page":"1"}


//查询消息
http://192.168.0.88/laravel/dcenter/api/?type=getMsg&dataform={"cur_page":"1"}
//添加或修改消息
//添加
http://192.168.0.88/laravel/dcenter/api/?type=updateMsg&dataform={"upd_flag":"0","sid":"1","recvid":"13037125104","title":"msg add title","content":"msg content add","attach":""}
//修改
http://192.168.0.88/laravel/dcenter/api/?type=updateMsg&dataform={"upd_flag":"1","update_id":"1","recvid":"13037125104","title":"msg add title","content":"msg content add","attach":"change"}
//删除
http://192.168.0.88/laravel/dcenter/api/?type=deleteMsg&dataform={"delete_id":"1"}

//查询联系人
http://192.168.0.88/laravel/dcenter/api/?type=getContacts&dataform={"cur_page":"1","sid":"slave1"}
//添加联系人
http://192.168.0.88/laravel/dcenter/api/?type=updateContact&dataform={"upd_flag":"0","name":"陈明","recvid":"13037125104|13037125104@163.com"}
//修改联系人
http://192.168.0.88/laravel/dcenter/api/?type=updateContact&dataform={"upd_flag":"1","update_id":"3","name":"陈明","recvid":"13037125104|13037125104@163.com|13037125104@163.com"}

//检查联系人是否唯一 添加的时候最好也请求（失去焦点验证），
http://192.168.0.88/laravel/dcenter/api/?type=checkContactName&dataform={"name":"cmedit"}
//删除
http://192.168.0.88/laravel/dcenter/api/?type=deleteContact&dataform={"delete_id":"1"}


//查询 消息模版
http://192.168.0.88/laravel/dcenter/api/?type=getMsgModels&dataform={"cur_page":"1"}
//添加消息 模版
http://192.168.0.88/laravel/dcenter/api/?type=updateMsgModel&dataform={"upd_flag":"0","title":"this is a title","content":"this is a content"}
//修改消息 模版
http://192.168.0.88/laravel/dcenter/api/?type=updateMsgModel&dataform={"upd_flag":"1","update_id":"1","title":"change title","content":"change content"}
//删除
http://192.168.0.88/laravel/dcenter/api/?type=deleteMsgModel&dataform={"delete_id":"1"}

//登录
login

http://192.168.0.88/laravel/dcenter/api/?type=login&dataform={"ad_uname":"cm","ad_pwd":"123456"}
//添加
http://192.168.0.88/laravel/dcenter/api/?type=addAdmin&dataform={"ad_uname":"cm","ad_pwd":"123456","ad_nick":"nicheng"}
//跟新token
http://192.168.0.88/laravel/dcenter/api/?type=updateToken&dataform={}
//退出登录
http://192.168.0.88/laravel/dcenter/api/?type=signUp&dataform={}


//token 验证测试

http://192.168.0.88/laravel/dcenter/api/?type=tokenValidate&dataform={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOjE0OTY3Mzc5OTIsImlhdCI6IiIsIm5iZiI6IiIsImV4cCI6MTQ5Njc0NTE5Mn0.0aAuxCEfOC6zE0JTj_v4_FACPjVOQtrkgZXytWShPs4"}
